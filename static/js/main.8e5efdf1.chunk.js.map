{"version":3,"sources":["App.js","index.js"],"names":["App","useState","sec","setSec","status","setStatus","lastClicked","setLastClicked","useEffect","unsubscribe","Subject","interval","pipe","takeUntil","subscribe","val","next","complete","className","Date","toISOString","slice","type","onClick","timeNow","getTime","ReactDOM","render","document","getElementById"],"mappings":"2NAKe,SAASA,IAAO,IAAD,EACNC,mBAAS,GADH,mBACrBC,EADqB,KAChBC,EADgB,OAEAF,mBAAS,QAFT,mBAErBG,EAFqB,KAEbC,EAFa,OAGUJ,mBAAS,GAHnB,mBAGrBK,EAHqB,KAGRC,EAHQ,KAK5BC,qBAAU,WACR,IAAMC,EAAc,IAAIC,IAUxB,OARAC,YAAS,KACNC,KAAKC,YAAUJ,IACfK,WAAU,WACM,QAAXV,GACFD,GAAO,SAAAY,GAAG,OAAIA,EAAM,UAInB,WACLN,EAAYO,OACZP,EAAYQ,cAEb,CAACb,IAyBJ,OACE,yBAAKc,UAAU,QACb,0BAAMA,UAAU,iCACb,IAAIC,KAAKjB,GAAKkB,cAAcC,MAAM,GAAI,KAEzC,yBAAKH,UAAU,eACb,4BACEI,KAAK,SACLJ,UAAU,0BACVK,QAhCM,WACZlB,EAAU,SA4BN,SAOA,4BACEiB,KAAK,SACLJ,UAAU,0BACVK,QAnCK,WACXlB,EAAU,QACVF,EAAO,KA8BH,QAOA,4BACEmB,KAAK,SACLJ,UAAU,0BACVK,QArCM,WACZpB,EAAO,KAiCH,SAOA,4BACEmB,KAAK,SACLJ,UAAU,0BACVK,QAxCK,WACX,IAAMC,GAAU,IAAIL,MAAOM,UAEtBD,EAAUlB,EAAe,KAC5BD,EAAU,QAGZE,EAAeiB,KA8BX,U,MCxERE,IAASC,OACP,kBAAC3B,EAAD,MACA4B,SAASC,eAAe,W","file":"static/js/main.8e5efdf1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { interval, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport default function App() {\n  const [sec, setSec] = useState(0);\n  const [status, setStatus] = useState('stop');\n  const [lastClicked, setLastClicked] = useState(0);\n\n  useEffect(() => {\n    const unsubscribe = new Subject();\n\n    interval(1000)\n      .pipe(takeUntil(unsubscribe))\n      .subscribe(() => {\n        if (status === 'run') {\n          setSec(val => val + 1000);\n        }\n      });\n\n    return () => {\n      unsubscribe.next();\n      unsubscribe.complete();\n    };\n  }, [status]);\n\n  const start = () => {\n    setStatus('run');\n  };\n\n  const stop = () => {\n    setStatus('stop');\n    setSec(0);\n  };\n\n  const reset = () => {\n    setSec(0);\n  };\n\n  const wait = () => {\n    const timeNow = new Date().getTime();\n\n    if ((timeNow - lastClicked) < 300) {\n      setStatus('wait');\n    }\n\n    setLastClicked(timeNow);\n  };\n\n  return (\n    <div className=\"card\">\n      <span className=\"card-header-title is-centered\">\n        {new Date(sec).toISOString().slice(11, 19)}\n      </span>\n      <div className=\"card-footer\">\n        <button\n          type=\"button\"\n          className=\"button card-footer-item\"\n          onClick={start}\n        >\n          Start\n        </button>\n        <button\n          type=\"button\"\n          className=\"button card-footer-item\"\n          onClick={stop}\n        >\n          Stop\n        </button>\n        <button\n          type=\"button\"\n          className=\"button card-footer-item\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n        <button\n          type=\"button\"\n          className=\"button card-footer-item\"\n          onClick={wait}\n        >\n          Wait\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}